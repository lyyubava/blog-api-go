variables:
- name: dockerfilePath
  value: Dockerfile
- group: social-network-var-group

steps:
- script: |
    python -m pip install --upgrade pip
    pip install jinja2
  displayName: 'Install Jinja2'

- task: Bash@3
  inputs:
   targetType: 'inline'
   script: |
     ./ci/common
   failOnStderr: true
   workingDirectory: "$(System.DefaultWorkingDirectory)/blog-api-go/"

- bash: |
    short_hash=$(git rev-parse --short=7 HEAD)
    tag="${short_hash}"
    echo "##vso[task.setvariable variable=tag;isoutput=true]$tag"
  name: tag

- task: CmdLine@1
  displayName: 'Lock image version in deployment.yaml'
  inputs:
    filename: /bin/bash
    arguments: '-c "awk ''{gsub(\"IMAGE_NAME\", \"europe-central2-docker.pkg.dev/$(IMAGE_REPOSITORY):$(tag.tag)\", $0); print}'' deployment.yml > $(build.artifactstagingdirectory)/deployment.yml"'

- script:
    cat $(build.artifactstagingdirectory)/deployment.yml
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    ArtifactName: deployment
    PathtoPublish: '$(build.artifactstagingdirectory)'        

- task: Docker@2
  displayName: Build and push an image to Artifact Registry
  inputs:
    command: buildAndPush
    repository: $(IMAGE_REPOSITORY)
    dockerfile: $(dockerfilePath)
    containerRegistry: $(ARTIFACT_REGISTRY_SERVICE_CONNECTION)
    tags: $(tag.tag)
